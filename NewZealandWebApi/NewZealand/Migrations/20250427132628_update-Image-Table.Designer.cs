// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewZealand.Data;

#nullable disable

namespace NewZealand.Migrations
{
    [DbContext(typeof(NZDbContext))]
    [Migration("20250427132628_update-Image-Table")]
    partial class updateImageTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewZealand.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("981c0b18-c325-41c6-b52d-af49c3abfdae"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("30547172-2b6a-4d45-92c6-d4f57a0302db"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("d696e25f-643e-4f9a-891e-204170e41a32"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NewZealand.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NewZealand.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("551f264a-8f7d-47f3-b7d5-a49e33d08c53"),
                            Code = "UP",
                            Name = "Noida",
                            RegionImageUrl = "https://media.gettyimages.com/id/1224427501/photo/aerial-night-shot-of-buildings-with-homes-and-offices-with-more-skyscrapers-in-the-distance.jpg?s=612x612&w=gi&k=20&c=hJkyRqEHkK9NjoAwuNtKTHJPZ1LvvaRT5A0Ns_fP7JE="
                        },
                        new
                        {
                            Id = new Guid("28bb9c0c-6372-4acf-9247-06d65e3c59f6"),
                            Code = "Harayana",
                            Name = "Gurugram",
                            RegionImageUrl = "https://media.gettyimages.com/id/1224427501/photo/aerial-night-shot-of-buildings-with-homes-and-offices-with-more-skyscrapers-in-the-distance.jpg?s=612x612&w=gi&k=20&c=hJkyRqEHkK9NjoAwuNtKTHJPZ1LvvaRT5A0Ns_fP7JE="
                        });
                });

            modelBuilder.Entity("NewZealand.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NewZealand.Models.Domain.Walk", b =>
                {
                    b.HasOne("NewZealand.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewZealand.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
